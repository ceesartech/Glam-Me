server:
  port: 8080

spring:
  application:
    name: reviews-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:aws}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:glamme}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0

aws:
  region: ${AWS_REGION:us-east-1}
  eventbridge:
    bus-name: ${EVENTBRIDGE_BUS_NAME:glamme-bus}
  secrets:
    database-arn: ${DATABASE_SECRET_ARN:}

logging:
  level:
    tech.ceesar.glamme: INFO
    software.amazon.awssdk: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized