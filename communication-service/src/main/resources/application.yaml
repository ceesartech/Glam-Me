server:
  port: 8080

spring:
  application:
    name: communication-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:aws}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:glamme}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0

aws:
  region: ${AWS_REGION:us-east-1}
  chime:
    app-instance-arn: ${CHIME_APP_INSTANCE_ARN}
  sns:
    topic-arn: ${SNS_TOPIC_ARN:arn:aws:sns:us-east-1:476114151082:glamme-notifications}
  pinpoint:
    app-id: ${PINPOINT_APP_ID}
    sms-origination-number: ${PINPOINT_SMS_ORIGINATION_NUMBER}
  ses:
    from-email: ${SES_FROM_EMAIL:noreply@glamme.com}
  secrets:
    database-arn: ${DATABASE_SECRET_ARN:}
    sns-arn: ${SNS_SECRET_ARN:}
    ses-arn: ${SES_SECRET_ARN:}
  eventbridge:
    bus-name: ${EVENTBRIDGE_BUS_NAME:glamme-bus}

communication:
  sms:
    default-region: ${AWS_REGION:us-east-1}
  email:
    templates:
      welcome: "Welcome to GlamMe!"
      booking-confirmation: "Your booking has been confirmed"
      payment-receipt: "Payment receipt"
  push:
    enabled: true
    ttl: 86400  # 24 hours

logging:
  level:
    tech.ceesar.glamme: INFO
    software.amazon.awssdk: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized